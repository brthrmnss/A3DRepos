<?xml version="1.0" encoding="utf-8"?>
<s:ItemRenderer xmlns:fx="http://ns.adobe.com/mxml/2009" 
		 xmlns:s="library://ns.adobe.com/flex/spark"  creationComplete="group1_creationCompleteHandler(event)"
		 xmlns:mx="library://ns.adobe.com/flex/mx" width="100%" height="25" 
		 autoDrawBackground="false"
	 >
	<fx:Script>
		<![CDATA[
			import mx.events.FlexEvent;
			
			import org.syncon.CncSim.model.CustomEvent;
			import org.syncon.CncSim.vo.ItemRendererHelpers;
			import org.syncon.CncSim.vo.LayerBaseVO;
			import org.syncon.CncSim.view.ui.old.components.layer_cart_panel;
			[Bindable]
			private var txtText:String = "";
			public var creationComplete:Boolean = false
			private var _labelText:String;
			
			
			public var help : ItemRendererHelpers = new ItemRendererHelpers(this ) ; 
			[Bindable] public var layer : LayerBaseVO = new LayerBaseVO()
			
			override public function set data(value:Object):void { 
				super.data = value; 
				this.help.listenForObj(value,LayerBaseVO.UPDATED, this.updateItemRenderer )
				layer = value as LayerBaseVO
				this.help.disableIfNull( value, new LayerBaseVO, 'layer' )  
				this.help.setupParent( this.owner ) ;
				//this.help.fxSetup( null, null, this.btnDelete  ) ; 
				this.updateItemRenderer()
			} 
			
			public function updateItemRenderer(e:Event=null)  : void
			{
				txtLbl.text = this.layer.location 
				if (this.selected == false && this.currentState == 'selected' )
					this.currentState = ''; 
				this.alpha = 1; 
				if ( this.layer.visible == false ) 
				{
					this.alpha = 0.4
				}
			}
			
			public function set labelText(string:String):void
			{
				//this.txtText = string;
				this._labelText = string; 
				if ( this.creationComplete == false ) return; 
				//this.lblName.text = string; 
			}

			protected function group1_creationCompleteHandler(event:FlexEvent):void
			{
				this.creationComplete = true
				// TODO Auto-generated method stub
				//this.lblName.text = this._labelText
				this.labelText = this._labelText; 
			}
			
			protected function onRemove(event:MouseEvent):void
			{
				// TODO Auto-generated method stub
				this.dispatchEvent( new CustomEvent(layer_cart_panel.REMOVE_LAYER, this.layer) ) ; 
			}
			
		]]>
	</fx:Script>
	<fx:Declarations>
		<!-- Place non-visual elements (e.g., services, value objects) here -->
		<s:Elastic id="elasticEasing"/>
	</fx:Declarations>
	<s:states> 
		<s:State name="normal"/> 
		<s:State name="hovered"/> 
		<s:State name="disabled"/> 
		<s:State name="selected"/> 
	</s:states> 
 
	 
	<s:Group width="100%" verticalCenter="0">
 
		<s:Label id="txtLbl" x="5" width="100" color="0" fontSize="12" verticalCenter="0"
				 buttonMode.hovered="true" color.hovered="0x545454"
				 color.selected="0" styleName="grayTxt Arial" />
		 
		

		
	</s:Group>
	
	<s:Line  top="0" bottom="0">
		<s:stroke> 
			<s:SolidColorStroke color="0xe9e9e9"/>
		</s:stroke>
	</s:Line>
	
</s:ItemRenderer>
