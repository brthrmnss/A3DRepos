<?xml version="1.0" encoding="utf-8"?>
<s:Group xmlns:fx="http://ns.adobe.com/mxml/2009"
		 xmlns:s="library://ns.adobe.com/flex/spark"
		 xmlns:ui="org.syncon.Customizer.view.ui.*"
		 width="100%" height="100%" creationComplete="onInit(event)">
	<fx:Script>
		<![CDATA[
			import mx.events.FlexEvent;
			
			import org.syncon.Customizer.vo.ItemRendererHelpers;
			import org.syncon.Customizer.vo.LayerBaseVO;
			
			import spark.events.TextOperationEvent;
			
			public static const CHANGED_POSITION:String='CHANGED_POSITION';
			public static const CHANGED_SIZE:String='CHANGED_SIZE';
			
			public var s : ItemRendererHelpers = new ItemRendererHelpers(null)
			
			private var _layer : LayerBaseVO = new LayerBaseVO() ;
			protected function onInit(event:FlexEvent):void
			{
			}		
			
			public function get layer() : LayerBaseVO  { return this._layer;  }
			public function set layer (str : LayerBaseVO ) : void
			{
				this._layer = str; 
				this.onUpdate(); 
				s.listenForObj( layer, LayerBaseVO.UPDATED, this.onUpdate ) ; 	
			}
 	
			
			protected function onChangePosition(event:TextOperationEvent):void
			{
				this.dispatchEvent( new Event( CHANGED_POSITION ) ) 
			}
			protected function onChangeSize(event:TextOperationEvent):void
			{
				this.dispatchEvent( new Event( CHANGED_SIZE ) ) 
			}
			
			private function onUpdate(e:Event=null):void
			{
				if ( this.layer == null ) 
					return; 
				this.txtX.text = this._layer.x.toString()
				this.txtY.text = this._layer.y.toString()
				this.txtWidth.text = this.layer.nonChromeWidth.toString(); // this._layer.width.toString()
				this.txtHeight.text = this.layer.nonChromeHeight.toString(); // this._layer.height.toString()
			}
			
		]]>
	</fx:Script>
	<fx:Declarations>
	</fx:Declarations>
	
	<s:VGroup verticalAlign="middle">
		<s:Form>
			<s:FormItem label="x">
				<s:TextInput id="txtX" change="onChangePosition(event)"/>
			</s:FormItem>
			<s:FormItem label="y">
				<s:TextInput id="txtY" change="onChangePosition(event)"/>
			</s:FormItem>
			<s:FormItem label="width">
				<s:TextInput id="txtWidth" change="onChangeSize(event)"/>
			</s:FormItem>
			<s:FormItem label="height">
				<s:TextInput id="txtHeight" change="onChangeSize(event)"/>
			</s:FormItem>			
		</s:Form>
	 
		
	</s:VGroup>
</s:Group>